/home/ubuntu/coser_bot/venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py:207: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /home/ubuntu/coser_bot/venv/bin/python
cachedir: .pytest_cache
rootdir: /home/ubuntu/coser_bot
configfile: pyproject.toml
plugins: anyio-4.8.0, asyncio-0.25.2
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None
collected 4 items                                                              

tests/test_admin_auth.py::test_login PASSED                              [ 25%]
tests/test_admin_auth.py::test_login_invalid_credentials PASSED          [ 50%]
tests/test_admin_auth.py::test_get_admin_info FAILED                     [ 75%]
tests/test_admin_auth.py::test_logout FAILED                             [100%]

=================================== FAILURES ===================================
_____________________________ test_get_admin_info ______________________________

client = <httpx.AsyncClient object at 0x7f8d01099460>
test_db = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8d01043530>
test_admin = <app.models.admin.AdminUser object at 0x7f8d017dd880>

    @pytest.mark.asyncio
    async def test_get_admin_info(client, test_db, test_admin):
        """测试获取管理员信息"""
        print("\n=== 开始测试获取管理员信息 ===")
        print(f"测试管理员ID: {test_admin.id}")
        print(f"测试管理员用户名: {test_admin.username}")
    
        # 先登录获取token
        print("\n尝试登录...")
        login_response = await client.post(
            "/admin/login",
            data={
                "username": "test_admin",
                "password": "testpass123",
                "grant_type": "password"  # OAuth2 要求
            }
        )
        print(f"登录响应状态码: {login_response.status_code}")
        print(f"登录响应内容: {login_response.json()}")
    
>       assert login_response.status_code == 200, "登录失败"
E       AssertionError: 登录失败
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code

tests/test_admin_auth.py:148: AssertionError
----------------------------- Captured stdout call -----------------------------

=== 开始测试获取管理员信息 ===
测试管理员ID: 1
测试管理员用户名: test_admin

尝试登录...
2025-01-22 01:26:46,647 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-01-22 01:26:46,647 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
2025-01-22 01:26:46,647 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,648 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("users")
2025-01-22 01:26:46,648 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,648 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("point_records")
2025-01-22 01:26:46,648 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,649 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("point_records")
2025-01-22 01:26:46,649 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,650 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_users")
2025-01-22 01:26:46,650 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,650 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("admin_users")
2025-01-22 01:26:46,650 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,651 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_logs")
2025-01-22 01:26:46,651 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,652 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("admin_logs")
2025-01-22 01:26:46,652 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,653 INFO sqlalchemy.engine.Engine 
CREATE TABLE users (
	id INTEGER NOT NULL, 
	telegram_id VARCHAR(32) NOT NULL, 
	email VARCHAR(128), 
	status INTEGER, 
	points INTEGER, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (telegram_id), 
	UNIQUE (email)
)


2025-01-22 01:26:46,653 INFO sqlalchemy.engine.Engine [no key 0.00009s] ()
2025-01-22 01:26:46,653 INFO sqlalchemy.engine.Engine 
CREATE TABLE point_records (
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	points INTEGER NOT NULL, 
	type INTEGER NOT NULL, 
	description VARCHAR(255), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id)
)


2025-01-22 01:26:46,653 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,654 INFO sqlalchemy.engine.Engine 
CREATE TABLE admin_users (
	id INTEGER NOT NULL, 
	username VARCHAR(50) NOT NULL, 
	password_hash VARCHAR(255) NOT NULL, 
	role VARCHAR(10) NOT NULL, 
	is_active BOOLEAN, 
	last_login TIMESTAMP, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (username)
)


2025-01-22 01:26:46,654 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,655 INFO sqlalchemy.engine.Engine 
CREATE TABLE admin_logs (
	id INTEGER NOT NULL, 
	admin_id INTEGER NOT NULL, 
	action VARCHAR(50) NOT NULL, 
	target_type VARCHAR(50) NOT NULL, 
	target_id VARCHAR(50) NOT NULL, 
	details VARCHAR(500), 
	ip_address VARCHAR(50), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(admin_id) REFERENCES admin_users (id)
)


2025-01-22 01:26:46,655 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,656 INFO sqlalchemy.engine.Engine COMMIT
2025-01-22 01:26:46,656 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-01-22 01:26:46,656 INFO sqlalchemy.engine.Engine SELECT admin_users.id, admin_users.username, admin_users.password_hash, admin_users.role, admin_users.is_active, admin_users.last_login, admin_users.created_at, admin_users.updated_at 
FROM admin_users 
WHERE admin_users.username = ?
2025-01-22 01:26:46,656 INFO sqlalchemy.engine.Engine [cached since 0.3085s ago] ('test_admin',)
2025-01-22 01:26:46,657 INFO sqlalchemy.engine.Engine ROLLBACK
2025-01-22 01:26:46,658 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-01-22 01:26:46,658 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
2025-01-22 01:26:46,658 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,658 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("point_records")
2025-01-22 01:26:46,659 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,659 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_users")
2025-01-22 01:26:46,659 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,660 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_logs")
2025-01-22 01:26:46,660 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,660 INFO sqlalchemy.engine.Engine 
DROP TABLE admin_logs
2025-01-22 01:26:46,660 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
2025-01-22 01:26:46,661 INFO sqlalchemy.engine.Engine 
DROP TABLE admin_users
2025-01-22 01:26:46,661 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
2025-01-22 01:26:46,662 INFO sqlalchemy.engine.Engine 
DROP TABLE point_records
2025-01-22 01:26:46,662 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
2025-01-22 01:26:46,662 INFO sqlalchemy.engine.Engine 
DROP TABLE users
2025-01-22 01:26:46,662 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
2025-01-22 01:26:46,663 INFO sqlalchemy.engine.Engine COMMIT
登录响应状态码: 401
登录响应内容: {'detail': '用户名或密码错误'}
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2699 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE users (
	id INTEGER NOT NULL, 
	telegram_id VARCHAR(32) NOT NULL, 
	email VARCHAR(128), 
	status INTEGER, 
	points INTEGER, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (telegram_id), 
	UNIQUE (email)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00009s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE point_records (
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	points INTEGER NOT NULL, 
	type INTEGER NOT NULL, 
	description VARCHAR(255), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE admin_users (
	id INTEGER NOT NULL, 
	username VARCHAR(50) NOT NULL, 
	password_hash VARCHAR(255) NOT NULL, 
	role VARCHAR(10) NOT NULL, 
	is_active BOOLEAN, 
	last_login TIMESTAMP, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (username)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE admin_logs (
	id INTEGER NOT NULL, 
	admin_id INTEGER NOT NULL, 
	action VARCHAR(50) NOT NULL, 
	target_type VARCHAR(50) NOT NULL, 
	target_id VARCHAR(50) NOT NULL, 
	details VARCHAR(500), 
	ip_address VARCHAR(50), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(admin_id) REFERENCES admin_users (id)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:2705 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2699 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1843 SELECT admin_users.id, admin_users.username, admin_users.password_hash, admin_users.role, admin_users.is_active, admin_users.last_login, admin_users.created_at, admin_users.updated_at 
FROM admin_users 
WHERE admin_users.username = ?
INFO     sqlalchemy.engine.Engine:base.py:1843 [cached since 0.3085s ago] ('test_admin',)
INFO     sqlalchemy.engine.Engine:base.py:2702 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2699 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE admin_logs
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00007s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE admin_users
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00007s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE point_records
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00007s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE users
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00007s] ()
INFO     sqlalchemy.engine.Engine:base.py:2705 COMMIT
_________________________________ test_logout __________________________________

client = <httpx.AsyncClient object at 0x7f8d010d9df0>
test_db = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8d01043530>
test_admin = <app.models.admin.AdminUser object at 0x7f8d017dd880>

    @pytest.mark.asyncio
    async def test_logout(client, test_db, test_admin):
        """测试注销"""
        # 先登录获取token
        login_response = await client.post(
            "/admin/login",
            data={
                "username": "test_admin",
                "password": "testpass123",
                "grant_type": "password"  # OAuth2 要求
            }
        )
>       token = login_response.json()["access_token"]
E       KeyError: 'access_token'

tests/test_admin_auth.py:182: KeyError
----------------------------- Captured stdout call -----------------------------
2025-01-22 01:26:46,723 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-01-22 01:26:46,723 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
2025-01-22 01:26:46,723 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,724 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("users")
2025-01-22 01:26:46,724 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,725 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("point_records")
2025-01-22 01:26:46,725 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,725 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("point_records")
2025-01-22 01:26:46,726 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,726 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_users")
2025-01-22 01:26:46,726 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,727 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("admin_users")
2025-01-22 01:26:46,727 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,727 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_logs")
2025-01-22 01:26:46,727 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,728 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("admin_logs")
2025-01-22 01:26:46,728 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,730 INFO sqlalchemy.engine.Engine 
CREATE TABLE users (
	id INTEGER NOT NULL, 
	telegram_id VARCHAR(32) NOT NULL, 
	email VARCHAR(128), 
	status INTEGER, 
	points INTEGER, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (telegram_id), 
	UNIQUE (email)
)


2025-01-22 01:26:46,730 INFO sqlalchemy.engine.Engine [no key 0.00011s] ()
2025-01-22 01:26:46,730 INFO sqlalchemy.engine.Engine 
CREATE TABLE point_records (
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	points INTEGER NOT NULL, 
	type INTEGER NOT NULL, 
	description VARCHAR(255), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id)
)


2025-01-22 01:26:46,731 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,731 INFO sqlalchemy.engine.Engine 
CREATE TABLE admin_users (
	id INTEGER NOT NULL, 
	username VARCHAR(50) NOT NULL, 
	password_hash VARCHAR(255) NOT NULL, 
	role VARCHAR(10) NOT NULL, 
	is_active BOOLEAN, 
	last_login TIMESTAMP, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (username)
)


2025-01-22 01:26:46,731 INFO sqlalchemy.engine.Engine [no key 0.00010s] ()
2025-01-22 01:26:46,732 INFO sqlalchemy.engine.Engine 
CREATE TABLE admin_logs (
	id INTEGER NOT NULL, 
	admin_id INTEGER NOT NULL, 
	action VARCHAR(50) NOT NULL, 
	target_type VARCHAR(50) NOT NULL, 
	target_id VARCHAR(50) NOT NULL, 
	details VARCHAR(500), 
	ip_address VARCHAR(50), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(admin_id) REFERENCES admin_users (id)
)


2025-01-22 01:26:46,732 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,733 INFO sqlalchemy.engine.Engine COMMIT
2025-01-22 01:26:46,733 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-01-22 01:26:46,733 INFO sqlalchemy.engine.Engine SELECT admin_users.id, admin_users.username, admin_users.password_hash, admin_users.role, admin_users.is_active, admin_users.last_login, admin_users.created_at, admin_users.updated_at 
FROM admin_users 
WHERE admin_users.username = ?
2025-01-22 01:26:46,734 INFO sqlalchemy.engine.Engine [cached since 0.3856s ago] ('test_admin',)
2025-01-22 01:26:46,734 INFO sqlalchemy.engine.Engine ROLLBACK
2025-01-22 01:26:46,735 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-01-22 01:26:46,735 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
2025-01-22 01:26:46,735 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,735 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("point_records")
2025-01-22 01:26:46,736 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,736 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_users")
2025-01-22 01:26:46,736 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,737 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_logs")
2025-01-22 01:26:46,737 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,738 INFO sqlalchemy.engine.Engine 
DROP TABLE admin_logs
2025-01-22 01:26:46,738 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,738 INFO sqlalchemy.engine.Engine 
DROP TABLE admin_users
2025-01-22 01:26:46,738 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,739 INFO sqlalchemy.engine.Engine 
DROP TABLE point_records
2025-01-22 01:26:46,739 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
2025-01-22 01:26:46,739 INFO sqlalchemy.engine.Engine 
DROP TABLE users
2025-01-22 01:26:46,739 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
2025-01-22 01:26:46,740 INFO sqlalchemy.engine.Engine COMMIT
------------------------------ Captured log call -------------------------------
INFO     sqlalchemy.engine.Engine:base.py:2699 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE users (
	id INTEGER NOT NULL, 
	telegram_id VARCHAR(32) NOT NULL, 
	email VARCHAR(128), 
	status INTEGER, 
	points INTEGER, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (telegram_id), 
	UNIQUE (email)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00011s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE point_records (
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	points INTEGER NOT NULL, 
	type INTEGER NOT NULL, 
	description VARCHAR(255), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE admin_users (
	id INTEGER NOT NULL, 
	username VARCHAR(50) NOT NULL, 
	password_hash VARCHAR(255) NOT NULL, 
	role VARCHAR(10) NOT NULL, 
	is_active BOOLEAN, 
	last_login TIMESTAMP, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (username)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00010s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
CREATE TABLE admin_logs (
	id INTEGER NOT NULL, 
	admin_id INTEGER NOT NULL, 
	action VARCHAR(50) NOT NULL, 
	target_type VARCHAR(50) NOT NULL, 
	target_id VARCHAR(50) NOT NULL, 
	details VARCHAR(500), 
	ip_address VARCHAR(50), 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(admin_id) REFERENCES admin_users (id)
)


INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:2705 COMMIT
INFO     sqlalchemy.engine.Engine:base.py:2699 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1843 SELECT admin_users.id, admin_users.username, admin_users.password_hash, admin_users.role, admin_users.is_active, admin_users.last_login, admin_users.created_at, admin_users.updated_at 
FROM admin_users 
WHERE admin_users.username = ?
INFO     sqlalchemy.engine.Engine:base.py:1843 [cached since 0.3856s ago] ('test_admin',)
INFO     sqlalchemy.engine.Engine:base.py:2702 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2699 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE admin_logs
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE admin_users
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE point_records
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00007s] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 
DROP TABLE users
INFO     sqlalchemy.engine.Engine:base.py:1843 [no key 0.00008s] ()
INFO     sqlalchemy.engine.Engine:base.py:2705 COMMIT
--------------------------- Captured stdout teardown ---------------------------
2025-01-22 01:26:46,745 INFO sqlalchemy.engine.Engine ROLLBACK
2025-01-22 01:26:46,747 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-01-22 01:26:46,748 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
2025-01-22 01:26:46,748 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,748 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("users")
2025-01-22 01:26:46,748 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,749 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("point_records")
2025-01-22 01:26:46,749 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,750 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("point_records")
2025-01-22 01:26:46,750 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,750 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_users")
2025-01-22 01:26:46,750 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,751 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("admin_users")
2025-01-22 01:26:46,751 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,751 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("admin_logs")
2025-01-22 01:26:46,751 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,752 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("admin_logs")
2025-01-22 01:26:46,752 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-01-22 01:26:46,753 INFO sqlalchemy.engine.Engine COMMIT
---------------------------- Captured log teardown -----------------------------
INFO     sqlalchemy.engine.Engine:base.py:2702 ROLLBACK
INFO     sqlalchemy.engine.Engine:base.py:2699 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("point_records")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("admin_users")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA main.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:1843 PRAGMA temp.table_info("admin_logs")
INFO     sqlalchemy.engine.Engine:base.py:1843 [raw sql] ()
INFO     sqlalchemy.engine.Engine:base.py:2705 COMMIT
=============================== warnings summary ===============================
venv/lib/python3.12/site-packages/passlib/utils/__init__.py:854
  /home/ubuntu/coser_bot/venv/lib/python3.12/site-packages/passlib/utils/__init__.py:854: DeprecationWarning: 'crypt' is deprecated and slated for removal in Python 3.13
    from crypt import crypt as _crypt

venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:295
venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:295
  /home/ubuntu/coser_bot/venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:295: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

app/db/database.py:24
  /home/ubuntu/coser_bot/app/db/database.py:24: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

tests/test_admin_auth.py::test_login
  /home/ubuntu/coser_bot/app/core/auth.py:48: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    expire = datetime.utcnow() + expires_delta

tests/test_admin_auth.py::test_login
  /home/ubuntu/coser_bot/app/routers/admin.py:58: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    admin.last_login = datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_admin_auth.py::test_get_admin_info - AssertionError: 登录失败
FAILED tests/test_admin_auth.py::test_logout - KeyError: 'access_token'
=================== 2 failed, 2 passed, 6 warnings in 1.91s ====================
